sklearn 

import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import r2_score, mean_squared_error
from sklearn.model_selection import train_test_split

# Load diabetes dataset
diabetes = datasets.load_diabetes()
X = diabetes.data[:, 2:3]
y = diabetes.target

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Polynomial features
poly = PolynomialFeatures(degree=2)
X_train_poly = poly.fit_transform(X_train)
X_test_poly = poly.transform(X_test)

# Train linear regression
model = LinearRegression()
model.fit(X_train_poly, y_train)

# Predictions
y_pred = model.predict(X_test_poly)


r2 = r2_score(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
print(f"RÂ² Score: {r2:.4f}")
print(f"Mean Squared Error: {mse:.2f}")

# Plot (for 1 feature)
plt.scatter(X_test, y_test, color='black', label='Actual')
x_range = np.linspace(X_test.min(), X_test.max(), 100).reshape(-1, 1)
x_range_poly = poly.transform(x_range)
y_range_pred = model.predict(x_range_poly)
plt.plot(x_range, y_range_pred, color='blue', label='Polynomial Regression')
plt.xlabel('BMI (feature)')
plt.ylabel('Target')
plt.title('Polynomial Regression on Diabetes Data')
plt.legend()
plt.grid(True)
plt.show()
